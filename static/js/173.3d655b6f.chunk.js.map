{"version":3,"file":"static/js/173.3d655b6f.chunk.js","mappings":"iMACA,GAAgB,gBAAkB,mCAAmC,WAAa,8BAA8B,UAAY,6BAA6B,eAAiB,kCAAkC,wBAA0B,2CAA2C,YAAc,+BAA+B,YAAc,+BAA+B,kBAAoB,qCAAqC,YAAc,gCCDraA,EAAoB,SAAAC,GAC/B,IAAIC,EAAS,CAAC,EAYd,OAVKD,EAAOE,MADE,iCAGIC,KAAKH,EAAOE,SAC5BD,EAAOC,MAAQ,iBAFfD,EAAOC,MAAQ,oBAIZF,EAAOI,SAEDJ,EAAOI,SAASC,OAAS,IAClCJ,EAAOG,SAAW,sBAFlBH,EAAOG,SAAW,uBAIbH,CACR,E,SCTYK,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,gBAAKC,UAAWC,EAAAA,gBAAhB,UACE,SAAC,KAAD,CACED,UAAWC,EAAAA,aACXC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZO,SAAUZ,EACVa,SAAU,SAAAZ,GACRO,EAAMP,EACP,EATH,SAWG,SAAAa,GACC,IAAQZ,EAAoCY,EAApCZ,OAAQa,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,QAASC,EAAUH,EAAVG,MAClC,OACE,UAAC,KAAD,CAAMR,UAAWC,EAAAA,WAAjB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,kBAAOQ,QAAQ,aAAaT,UAAWC,EAAAA,YAAvC,SAA6D,WAG7D,SAAC,KAAD,CACES,GAAG,aACHC,KAAK,QACLX,UACEP,EAAOC,OAASY,EAAQZ,MACpBO,EAAAA,kBACAA,EAAAA,eAGR,SAAC,KAAD,CACEU,KAAK,QACLC,UAAU,OACVZ,UAAWC,EAAAA,kBAIf,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,kBACEQ,QAAQ,iBACRT,UAAWC,EAAAA,YAFb,SAGC,cAGD,SAAC,KAAD,CACES,GAAG,gBACHC,KAAK,WACLX,UACEP,EAAOG,UAAYU,EAAQV,SACvBK,EAAAA,kBACAA,EAAAA,eAGR,SAAC,KAAD,CACEU,KAAK,WACLC,UAAU,OACVZ,UAAWC,EAAAA,kBAIf,mBACEY,KAAK,SACLb,UACIQ,GAASD,EAEPN,EAAAA,eADAA,EAAAA,wBAGNa,WAAYN,GAASD,GAPvB,SAQC,YAKN,KAIR,E,oBCrED,EAVc,WACZ,IAAMQ,GAAWC,EAAAA,EAAAA,MAMjB,OAAO,SAAClB,EAAD,CAAWC,MAJJ,SAAAP,GACZuB,GAASE,EAAAA,EAAAA,IAAWzB,GACrB,GAGF,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","support/validatorForm/loginValidator.js","components/LoginForm/LoginForm.jsx","pages/Login/login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_container\":\"LoginForm_login_container__5wEfJ\",\"login_form\":\"LoginForm_login_form__5NzpT\",\"form_item\":\"LoginForm_form_item__Qv4fS\",\"login_form_btn\":\"LoginForm_login_form_btn__OTa7O\",\"login_form_btn_disabled\":\"LoginForm_login_form_btn_disabled__eDYcX\",\"login_label\":\"LoginForm_login_label__JeSEK\",\"input_login\":\"LoginForm_input_login__zHQjz\",\"input_login_error\":\"LoginForm_input_login_error__yXG5-\",\"login_error\":\"LoginForm_login_error__v8B67\"};","export const validateLoginForm = values => {\n  let errors = {};\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!regex.test(values.email)) {\n    errors.email = 'Invalid Email';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (values.password.length < 4) {\n    errors.password = 'Password too short';\n  }\n  return errors;\n};\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport loginCSS from './LoginForm.module.css';\nimport { validateLoginForm } from 'support/validatorForm/loginValidator';\n\nexport const LoginForm = ({ login }) => {\n  return (\n    <div className={loginCSS.login_container}>\n      <Formik\n        className={loginCSS.login_formik}\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validate={validateLoginForm}\n        onSubmit={values => {\n          login(values);\n        }}\n      >\n        {formik => {\n          const { errors, touched, isValid, dirty } = formik;\n          return (\n            <Form className={loginCSS.login_form}>\n              <div className={loginCSS.form_item}>\n                <label htmlFor=\"loginEmail\" className={loginCSS.login_label}>\n                  Email\n                </label>\n                <Field\n                  id=\"loginEmail\"\n                  name=\"email\"\n                  className={\n                    errors.email && touched.email\n                      ? loginCSS.input_login_error\n                      : loginCSS.input_login\n                  }\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"span\"\n                  className={loginCSS.login_error}\n                />\n              </div>\n\n              <div className={loginCSS.form_item}>\n                <label\n                  htmlFor=\"loginrPassword\"\n                  className={loginCSS.login_label}\n                >\n                  Password\n                </label>\n                <Field\n                  id=\"loginPassword\"\n                  name=\"password\"\n                  className={\n                    errors.password && touched.password\n                      ? loginCSS.input_login_error\n                      : loginCSS.input_login\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"span\"\n                  className={loginCSS.login_error}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className={\n                  !(dirty && isValid)\n                    ? loginCSS.login_form_btn_disabled\n                    : loginCSS.login_form_btn\n                }\n                disabled={!(dirty && isValid)}\n              >\n                Login\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/thunks';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const login = values => {\n    dispatch(loginThunk(values));\n  };\n\n  return <LoginForm login={login} />;\n};\n\nexport default Login;\n"],"names":["validateLoginForm","values","errors","email","test","password","length","LoginForm","login","className","loginCSS","initialValues","validate","onSubmit","formik","touched","isValid","dirty","htmlFor","id","name","component","type","disabled","dispatch","useDispatch","loginThunk"],"sourceRoot":""}